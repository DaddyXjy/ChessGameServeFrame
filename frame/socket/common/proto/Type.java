// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: type.proto

package frame.socket.common.proto;

public final class Type {
  private Type() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code common.Server_Type}
   */
  public enum Server_Type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SERVER_TYPE_GATE = 0;</code>
     */
    SERVER_TYPE_GATE(0),
    /**
     * <code>SERVER_TYPE_ROUTE = 1;</code>
     */
    SERVER_TYPE_ROUTE(1),
    /**
     * <code>SERVER_TYPE_GAME = 2;</code>
     */
    SERVER_TYPE_GAME(2),
    /**
     * <code>SERVER_TYPE_RECORD = 3;</code>
     */
    SERVER_TYPE_RECORD(3),
    /**
     * <code>SERVER_TYPE_DATABASE = 4;</code>
     */
    SERVER_TYPE_DATABASE(4),
    /**
     * <code>SERVER_TYPE_GLOBAL = 5;</code>
     */
    SERVER_TYPE_GLOBAL(5),
    /**
     * <pre>
     * 大厅
     * </pre>
     *
     * <code>SERVER_TYPE_LOBBY = 6;</code>
     */
    SERVER_TYPE_LOBBY(6),
    /**
     * <pre>
     * 登录
     * </pre>
     *
     * <code>SERVER_TYPE_LOGIN = 7;</code>
     */
    SERVER_TYPE_LOGIN(7),
    /**
     * <pre>
     * 公共
     * </pre>
     *
     * <code>SERVER_TYPE_ACCOUNT = 8;</code>
     */
    SERVER_TYPE_ACCOUNT(8),
    /**
     * <pre>
     * 活动
     * </pre>
     *
     * <code>SERVER_TYPE_ACTIVITY = 9;</code>
     */
    SERVER_TYPE_ACTIVITY(9),
    /**
     * <pre>
     * 文件
     * </pre>
     *
     * <code>SERVER_TYPE_FILE = 10;</code>
     */
    SERVER_TYPE_FILE(10),
    /**
     * <pre>
     * 总控
     * </pre>
     *
     * <code>SERVER_TYPE_CONTROL = 11;</code>
     */
    SERVER_TYPE_CONTROL(11),
    /**
     * <pre>
     * 代理
     * </pre>
     *
     * <code>SERVER_TYPE_AGENT = 12;</code>
     */
    SERVER_TYPE_AGENT(12),
    /**
     * <pre>
     * 数据库备份
     * </pre>
     *
     * <code>SERVER_TYPE_BACKUP = 13;</code>
     */
    SERVER_TYPE_BACKUP(13),
    /**
     * <pre>
     * 机器人服务器
     * </pre>
     *
     * <code>SERVER_TYPE_ROBOT = 14;</code>
     */
    SERVER_TYPE_ROBOT(14),
    /**
     * <pre>
     *  支付服务器
     * </pre>
     *
     * <code>SERVER_TYPE_PAYMENT = 15;</code>
     */
    SERVER_TYPE_PAYMENT(15),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SERVER_TYPE_GATE = 0;</code>
     */
    public static final int SERVER_TYPE_GATE_VALUE = 0;
    /**
     * <code>SERVER_TYPE_ROUTE = 1;</code>
     */
    public static final int SERVER_TYPE_ROUTE_VALUE = 1;
    /**
     * <code>SERVER_TYPE_GAME = 2;</code>
     */
    public static final int SERVER_TYPE_GAME_VALUE = 2;
    /**
     * <code>SERVER_TYPE_RECORD = 3;</code>
     */
    public static final int SERVER_TYPE_RECORD_VALUE = 3;
    /**
     * <code>SERVER_TYPE_DATABASE = 4;</code>
     */
    public static final int SERVER_TYPE_DATABASE_VALUE = 4;
    /**
     * <code>SERVER_TYPE_GLOBAL = 5;</code>
     */
    public static final int SERVER_TYPE_GLOBAL_VALUE = 5;
    /**
     * <pre>
     * 大厅
     * </pre>
     *
     * <code>SERVER_TYPE_LOBBY = 6;</code>
     */
    public static final int SERVER_TYPE_LOBBY_VALUE = 6;
    /**
     * <pre>
     * 登录
     * </pre>
     *
     * <code>SERVER_TYPE_LOGIN = 7;</code>
     */
    public static final int SERVER_TYPE_LOGIN_VALUE = 7;
    /**
     * <pre>
     * 公共
     * </pre>
     *
     * <code>SERVER_TYPE_ACCOUNT = 8;</code>
     */
    public static final int SERVER_TYPE_ACCOUNT_VALUE = 8;
    /**
     * <pre>
     * 活动
     * </pre>
     *
     * <code>SERVER_TYPE_ACTIVITY = 9;</code>
     */
    public static final int SERVER_TYPE_ACTIVITY_VALUE = 9;
    /**
     * <pre>
     * 文件
     * </pre>
     *
     * <code>SERVER_TYPE_FILE = 10;</code>
     */
    public static final int SERVER_TYPE_FILE_VALUE = 10;
    /**
     * <pre>
     * 总控
     * </pre>
     *
     * <code>SERVER_TYPE_CONTROL = 11;</code>
     */
    public static final int SERVER_TYPE_CONTROL_VALUE = 11;
    /**
     * <pre>
     * 代理
     * </pre>
     *
     * <code>SERVER_TYPE_AGENT = 12;</code>
     */
    public static final int SERVER_TYPE_AGENT_VALUE = 12;
    /**
     * <pre>
     * 数据库备份
     * </pre>
     *
     * <code>SERVER_TYPE_BACKUP = 13;</code>
     */
    public static final int SERVER_TYPE_BACKUP_VALUE = 13;
    /**
     * <pre>
     * 机器人服务器
     * </pre>
     *
     * <code>SERVER_TYPE_ROBOT = 14;</code>
     */
    public static final int SERVER_TYPE_ROBOT_VALUE = 14;
    /**
     * <pre>
     *  支付服务器
     * </pre>
     *
     * <code>SERVER_TYPE_PAYMENT = 15;</code>
     */
    public static final int SERVER_TYPE_PAYMENT_VALUE = 15;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Server_Type valueOf(int value) {
      return forNumber(value);
    }

    public static Server_Type forNumber(int value) {
      switch (value) {
        case 0: return SERVER_TYPE_GATE;
        case 1: return SERVER_TYPE_ROUTE;
        case 2: return SERVER_TYPE_GAME;
        case 3: return SERVER_TYPE_RECORD;
        case 4: return SERVER_TYPE_DATABASE;
        case 5: return SERVER_TYPE_GLOBAL;
        case 6: return SERVER_TYPE_LOBBY;
        case 7: return SERVER_TYPE_LOGIN;
        case 8: return SERVER_TYPE_ACCOUNT;
        case 9: return SERVER_TYPE_ACTIVITY;
        case 10: return SERVER_TYPE_FILE;
        case 11: return SERVER_TYPE_CONTROL;
        case 12: return SERVER_TYPE_AGENT;
        case 13: return SERVER_TYPE_BACKUP;
        case 14: return SERVER_TYPE_ROBOT;
        case 15: return SERVER_TYPE_PAYMENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Server_Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Server_Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Server_Type>() {
            public Server_Type findValueByNumber(int number) {
              return Server_Type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return frame.socket.common.proto.Type.getDescriptor().getEnumTypes().get(0);
    }

    private static final Server_Type[] VALUES = values();

    public static Server_Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Server_Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:common.Server_Type)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ntype.proto\022\006common*\211\003\n\013Server_Type\022\024\n\020" +
      "SERVER_TYPE_GATE\020\000\022\025\n\021SERVER_TYPE_ROUTE\020" +
      "\001\022\024\n\020SERVER_TYPE_GAME\020\002\022\026\n\022SERVER_TYPE_R" +
      "ECORD\020\003\022\030\n\024SERVER_TYPE_DATABASE\020\004\022\026\n\022SER" +
      "VER_TYPE_GLOBAL\020\005\022\025\n\021SERVER_TYPE_LOBBY\020\006" +
      "\022\025\n\021SERVER_TYPE_LOGIN\020\007\022\027\n\023SERVER_TYPE_A" +
      "CCOUNT\020\010\022\030\n\024SERVER_TYPE_ACTIVITY\020\t\022\024\n\020SE" +
      "RVER_TYPE_FILE\020\n\022\027\n\023SERVER_TYPE_CONTROL\020" +
      "\013\022\025\n\021SERVER_TYPE_AGENT\020\014\022\026\n\022SERVER_TYPE_" +
      "BACKUP\020\r\022\025\n\021SERVER_TYPE_ROBOT\020\016\022\027\n\023SERVE" +
      "R_TYPE_PAYMENT\020\017B\036\n\031frame.socket.common." +
      "proto\370\001\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
